{"ID":36237,"Author":{"Name":"sseemayer","ID":0,"FullName":"","Gravatar":"3a403f519ca7f27e5ce6e2b4031df31b"},"Title":"Dokku Demo 1: Project Setup","Description":"\u003cdiv class=\"content\"\u003e\u003cp\u003eDokku supports all frameworks that have a \u003ca href=\"https://devcenter.heroku.com/articles/buildpacks\"\u003eHeroku buildpack\u003c/a\u003e available to them.  For the purpose of this example, I\u0026#39;ll set up a simple \u003ca href=\"http://expressjs.com/\"\u003eExpress.js\u003c/a\u003e project.\u003c/p\u003e\n\n\u003cp\u003eFor the \u003ca href=\"https://github.com/heroku/heroku-buildpack-nodejs\"\u003eHeroku node.js buildpack\u003c/a\u003e, the default behaviour is to start the project using \u003ccode\u003enpm start\u003c/code\u003e so we configure our \u003ccode\u003epackage.json\u003c/code\u003e to run \u003ccode\u003enode index\u003c/code\u003e to start our application.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ePORT\u003c/code\u003e environment variable will be set by Dokku, telling us what port the app should listen on. For local testing, we fall back to port 3000 if the environment variable is not set.\u003c/p\u003e\n\u003c/div\u003e","Time":"2016-02-12T09:04:52Z","Tags":["Linux","zsh","xterm"]}