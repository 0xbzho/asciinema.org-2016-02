{"ID":36363,"Author":{"Name":"modlot","ID":0,"FullName":"","Gravatar":"46f804e361a2a7999739bd4be63d55c1"},"Title":"Lab2A","Description":"\u003cdiv class=\"content\"\u003e\u003cp\u003eThe vulnerability to exploit was in the fgets call; they used 0x10 instead of actual 10! This allowed us to overflow 4 bytes into the i loop variable. This let us set it to a non 10 value which allowed us to increment the concat pointer until we reached the return pointer. Then we write the address of the shell function as the 4 bytes of the return pointer and pass \\n to fgets which ends the function.\u003c/p\u003e\n\n\u003cp\u003eInitially I had some trouble writing the hex bytes to fgets, so I piped all of my input to stdin using the following command: (/tmp/lab2A_23A.sh; cat-) | ./lab2A\u003c/p\u003e\n\n\u003cp\u003egist of lab2A_23A.sh: \u003ca href=\"https://gist.github.com/Maxfield-Chen/58a99fb6e5ecd0a80324\"\u003ehttps://gist.github.com/Maxfield-Chen/58a99fb6e5ecd0a80324\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e","Time":"2016-02-14T00:06:59Z","Tags":["Linux","bash","rxvt-unicode-256color"]}